digraph "CFG for '_Z3fooii' function" {
label="CFG for '_Z3fooii' function";
Block240[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B240\l 0x12c0:   mov  rdx, r14\l 0x12c3:   mov  rsi, r13\l 0x12c6:   mov  edi, r12d\l 0x12c9:   call  qword ptr [r15 + rbx*8]\l }"];
Block240 -> Block241;
Block239[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B239\l 0x12b7:   xor  ebx, ebx\l 0x12b9:   nop  dword ptr [rax]\l }"];
Block239 -> Block240;
Block238[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B238\l 0x12b1:   sar  rbp, 3\l 0x12b5:   je  0x12d6\l }"];
Block238 -> Block239;
Block238 -> Block242;
Block237[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B237\l 0x1279:   nop  dword ptr [rax]\l 0x1280:   endbr64  \l 0x1284:   push  r15\l 0x1286:   lea  r15, [rip + 0x2b2b]\l 0x128d:   push  r14\l 0x128f:   mov  r14, rdx\l 0x1292:   push  r13\l 0x1294:   mov  r13, rsi\l 0x1297:   push  r12\l 0x1299:   mov  r12d, edi\l 0x129c:   push  rbp\l 0x129d:   lea  rbp, [rip + 0x2b1c]\l 0x12a4:   push  rbx\l 0x12a5:   sub  rbp, r15\l 0x12a8:   sub  rsp, 8\l 0x12ac:   call  0x1000\l }"];
Block237 -> Block238;
Block236[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B236\l 0x1272:   mov  eax, 0\l 0x1277:   leave  \l 0x1278:   ret  \l }"];
Block236 -> Block201;
Block234[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B234\l 0x1243:   mov  dword ptr [rbp - 4], eax\l 0x1246:   mov  edx, dword ptr [rbp - 0xc]\l 0x1249:   mov  eax, dword ptr [rbp - 8]\l 0x124c:   add  eax, edx\l 0x124e:   cmp  dword ptr [rbp - 4], eax\l 0x1251:   je  0x1272\l }"];
Block234 -> Block235;
Block234 -> Block236;
Block231[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B231\l 0x11f7:   endbr64  \l 0x11fb:   push  rbp\l 0x11fc:   mov  rbp, rsp\l 0x11ff:   sub  rsp, 8\l 0x1203:   mov  dword ptr [rbp - 4], edi\l 0x1206:   mov  dword ptr [rbp - 8], esi\l 0x1209:   mov  edx, dword ptr [rbp - 8]\l 0x120c:   mov  eax, dword ptr [rbp - 4]\l 0x120f:   mov  esi, edx\l 0x1211:   mov  edi, eax\l 0x1213:   call  0x11d1\l }"];
Block231 -> Block232;
Block230[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B230\l 0x11f2:   add  eax, 1\l 0x11f5:   leave  \l 0x11f6:   ret  \l }"];
Block230 -> Block201;
Block229[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B229\l 0x11d1:   endbr64  \l 0x11d5:   push  rbp\l 0x11d6:   mov  rbp, rsp\l 0x11d9:   sub  rsp, 8\l 0x11dd:   mov  dword ptr [rbp - 4], edi\l 0x11e0:   mov  dword ptr [rbp - 8], esi\l 0x11e3:   mov  edx, dword ptr [rbp - 8]\l 0x11e6:   mov  eax, dword ptr [rbp - 4]\l 0x11e9:   mov  esi, edx\l 0x11eb:   mov  edi, eax\l 0x11ed:   call  0x11ab\l }"];
Block229 -> Block230;
Block209[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B209\l 0x10c0:   lea  rdi, [rip + 0x2f49]\l 0x10c7:   lea  rsi, [rip + 0x2f42]\l 0x10ce:   sub  rsi, rdi\l 0x10d1:   mov  rax, rsi\l 0x10d4:   shr  rsi, 0x3f\l 0x10d8:   sar  rax, 3\l 0x10dc:   add  rsi, rax\l 0x10df:   sar  rsi, 1\l 0x10e2:   je  0x10f8\l }"];
Block209 -> Block210;
Block209 -> Block213;
Block204[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B204\l 0x10a3:   mov  rax, qword ptr [rip + 0x2f2e]\l 0x10aa:   test  rax, rax\l 0x10ad:   je  0x10b8\l }"];
Block204 -> Block205;
Block204 -> Block207;
Block208[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B208\l 0x10b9:   nop  dword ptr [rax]\l }"];
Block208 -> Block209;
Block233[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B233\l 0x121a:   endbr64  \l 0x121e:   push  rbp\l 0x121f:   mov  rbp, rsp\l 0x1222:   sub  rsp, 0x10\l 0x1226:   mov  dword ptr [rbp - 0xc], 4\l 0x122d:   mov  dword ptr [rbp - 8], 5\l 0x1234:   mov  edx, dword ptr [rbp - 8]\l 0x1237:   mov  eax, dword ptr [rbp - 0xc]\l 0x123a:   mov  esi, edx\l 0x123c:   mov  edi, eax\l 0x123e:   call  0x11f7\l }"];
Block233 -> Block234;
Block207[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B207\l 0x10b8:   ret  \l }"];
Block207 -> Block201;
Block212[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B212\l 0x10f2:   nop  word ptr [rax + rax]\l }"];
Block212 -> Block213;
Block235[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B235\l 0x1253:   lea  rcx, [rip + 0xdaa]\l 0x125a:   mov  edx, 0x2c\l 0x125f:   lea  rsi, [rip + 0xda9]\l 0x1266:   lea  rdi, [rip + 0xdac]\l 0x126d:   call  0x1050\l }"];
Block235 -> Block236;
Block232[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B232\l 0x1218:   leave  \l 0x1219:   ret  \l }"];
Block232 -> Block201;
Block218[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B218\l 0x112c:   mov  byte ptr [rip + 0x2edd], 1\l 0x1133:   pop  rbp\l 0x1134:   ret  \l }"];
Block218 -> Block201;
Block223[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B223\l 0x115f:   endbr64  \l 0x1163:   push  rbp\l 0x1164:   mov  rbp, rsp\l 0x1167:   sub  rsp, 8\l 0x116b:   mov  dword ptr [rbp - 4], edi\l 0x116e:   mov  dword ptr [rbp - 8], esi\l 0x1171:   mov  edx, dword ptr [rbp - 8]\l 0x1174:   mov  eax, dword ptr [rbp - 4]\l 0x1177:   mov  esi, edx\l 0x1179:   mov  edi, eax\l 0x117b:   call  0x1149\l }"];
Block223 -> Block224;
Block211[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B211\l 0x10f0:   jmp  rax\l }"];
Block243[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B243\l 0x12e5:   nop  word ptr cs:[rax + rax]\l 0x12f0:   endbr64  \l 0x12f4:   ret  \l }"];
Block243 -> Block201;
Block215[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B215\l 0x110d:   push  rbp\l 0x110e:   cmp  qword ptr [rip + 0x2ee2], 0\l 0x1116:   mov  rbp, rsp\l 0x1119:   je  0x1127\l }"];
Block215 -> Block216;
Block215 -> Block217;
Block205[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B205\l 0x10af:   jmp  rax\l }"];
Block210[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B210\l 0x10e4:   mov  rax, qword ptr [rip + 0x2f05]\l 0x10eb:   test  rax, rax\l 0x10ee:   je  0x10f8\l }"];
Block210 -> Block211;
Block210 -> Block213;
Block202[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B202\l 0x1060:   endbr64  \l 0x1064:   xor  ebp, ebp\l 0x1066:   mov  r9, rdx\l 0x1069:   pop  rsi\l 0x106a:   mov  rdx, rsp\l 0x106d:   and  rsp, 0xfffffffffffffff0\l 0x1071:   push  rax\l 0x1072:   push  rsp\l 0x1073:   lea  r8, [rip + 0x276]\l 0x107a:   lea  rcx, [rip + 0x1ff]\l 0x1081:   lea  rdi, [rip + 0x192]\l 0x1088:   call  qword ptr [rip + 0x2f52]\l }"];
Block202 -> Block203;
Block201[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{_Z3fooii::EXIT\l }"];
Block213[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B213\l 0x10f8:   ret  \l }"];
Block213 -> Block201;
Block241[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B241\l 0x12cd:   add  rbx, 1\l 0x12d1:   cmp  rbp, rbx\l 0x12d4:   jne  0x12c0\l }"];
Block241 -> Block242;
Block241 -> Block240;
Block226[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B226\l 0x11a6:   add  eax, 1\l 0x11a9:   leave  \l 0x11aa:   ret  \l }"];
Block226 -> Block201;
Block203[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B203\l 0x108e:   hlt  \l 0x108f:   nop  \l 0x1090:   lea  rdi, [rip + 0x2f79]\l 0x1097:   lea  rax, [rip + 0x2f72]\l 0x109e:   cmp  rax, rdi\l 0x10a1:   je  0x10b8\l }"];
Block203 -> Block204;
Block203 -> Block207;
Block222[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B222\l 0x1149:   endbr64  \l 0x114d:   push  rbp\l 0x114e:   mov  rbp, rsp\l 0x1151:   mov  dword ptr [rbp - 4], edi\l 0x1154:   mov  dword ptr [rbp - 8], esi\l 0x1157:   mov  eax, dword ptr [rbp - 4]\l 0x115a:   add  eax, 1\l 0x115d:   pop  rbp\l 0x115e:   ret  \l }"];
Block222 -> Block201;
Block200[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{_Z3fooii::ENTRY\l }"];
Block200 -> Block202;
Block228[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B228\l 0x11cc:   add  eax, 1\l 0x11cf:   leave  \l 0x11d0:   ret  \l }"];
Block228 -> Block201;
Block216[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B216\l 0x111b:   mov  rdi, qword ptr [rip + 0x2ee6]\l 0x1122:   call  0x1040\l }"];
Block216 -> Block217;
Block220[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B220\l 0x1138:   ret  \l }"];
Block220 -> Block201;
Block214[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B214\l 0x10f9:   nop  dword ptr [rax]\l 0x1100:   endbr64  \l 0x1104:   cmp  byte ptr [rip + 0x2f05], 0\l 0x110b:   jne  0x1138\l }"];
Block214 -> Block215;
Block214 -> Block220;
Block206[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B206\l 0x10b1:   nop  dword ptr [rax]\l }"];
Block206 -> Block207;
Block217[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B217\l 0x1127:   call  0x1090\l }"];
Block217 -> Block218;
Block242[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B242\l 0x12d6:   add  rsp, 8\l 0x12da:   pop  rbx\l 0x12db:   pop  rbp\l 0x12dc:   pop  r12\l 0x12de:   pop  r13\l 0x12e0:   pop  r14\l 0x12e2:   pop  r15\l 0x12e4:   ret  \l }"];
Block242 -> Block201;
Block221[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B221\l 0x1139:   nop  dword ptr [rax]\l 0x1140:   endbr64  \l 0x1144:   jmp  0x10c0\l }"];
Block221 -> Block209;
Block224[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B224\l 0x1180:   add  eax, 1\l 0x1183:   leave  \l 0x1184:   ret  \l }"];
Block224 -> Block201;
Block225[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B225\l 0x1185:   endbr64  \l 0x1189:   push  rbp\l 0x118a:   mov  rbp, rsp\l 0x118d:   sub  rsp, 8\l 0x1191:   mov  dword ptr [rbp - 4], edi\l 0x1194:   mov  dword ptr [rbp - 8], esi\l 0x1197:   mov  edx, dword ptr [rbp - 8]\l 0x119a:   mov  eax, dword ptr [rbp - 4]\l 0x119d:   mov  esi, edx\l 0x119f:   mov  edi, eax\l 0x11a1:   call  0x115f\l }"];
Block225 -> Block226;
Block219[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B219\l 0x1135:   nop  dword ptr [rax]\l }"];
Block219 -> Block220;
Block227[shape=record, color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{B227\l 0x11ab:   endbr64  \l 0x11af:   push  rbp\l 0x11b0:   mov  rbp, rsp\l 0x11b3:   sub  rsp, 8\l 0x11b7:   mov  dword ptr [rbp - 4], edi\l 0x11ba:   mov  dword ptr [rbp - 8], esi\l 0x11bd:   mov  edx, dword ptr [rbp - 8]\l 0x11c0:   mov  eax, dword ptr [rbp - 4]\l 0x11c3:   mov  esi, edx\l 0x11c5:   mov  edi, eax\l 0x11c7:   call  0x1185\l }"];
Block227 -> Block228;
}
