
symex-x86-stack:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 0d c8 b7 fe e8    	add    %cl,-0x17014838(%rip)        # ffffffffe8febb35 <_end+0xffffffffe8fe7b1d>
 36d:	26 03 99 d0 fb f1 c6 	es add -0x390e0430(%rcx),%ebx
 374:	0d e1 58 9b 49       	or     $0x499b58e1,%eax
 379:	e8                   	.byte 0xe8
 37a:	b8                   	.byte 0xb8
 37b:	b7                   	.byte 0xb7

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	06                   	(bad)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 06                	add    %al,(%rsi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	46 00 00             	rex.RX add %r8b,(%rax)
 3e3:	00 20                	add    %ah,(%rax)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 0b                	add    %cl,(%rbx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 28                	add    %ch,(%rax)
 411:	00 00                	add    %al,(%rax)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 62 00             	add    %ah,0x0(%rdx)
 42a:	00 00                	add    %al,(%rax)
 42c:	20 00                	and    %al,(%rax)
	...
 43e:	00 00                	add    %al,(%rax)
 440:	71 00                	jno    442 <_init-0xbbe>
 442:	00 00                	add    %al,(%rax)
 444:	20 00                	and    %al,(%rax)
	...
 456:	00 00                	add    %al,(%rax)
 458:	19 00                	sbb    %eax,(%rax)
 45a:	00 00                	add    %al,(%rax)
 45c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000470 <.dynstr>:
 470:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 474:	63 2e                	movsxd (%rsi),%ebp
 476:	73 6f                	jae    4e7 <_init-0xb19>
 478:	2e 36 00 5f 5f       	cs ss add %bl,0x5f(%rdi)
 47d:	61                   	(bad)
 47e:	73 73                	jae    4f3 <_init-0xb0d>
 480:	65 72 74             	gs jb  4f7 <_init-0xb09>
 483:	5f                   	pop    %rdi
 484:	66 61                	data16 (bad)
 486:	69 6c 00 5f 5f 63 78 	imul   $0x6178635f,0x5f(%rax,%rax,1),%ebp
 48d:	61 
 48e:	5f                   	pop    %rdi
 48f:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 495:	7a 65                	jp     4fc <_init-0xb04>
 497:	00 5f 5f             	add    %bl,0x5f(%rdi)
 49a:	6c                   	insb   (%dx),%es:(%rdi)
 49b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4a2:	72 74                	jb     518 <_init-0xae8>
 4a4:	5f                   	pop    %rdi
 4a5:	6d                   	insl   (%dx),%es:(%rdi)
 4a6:	61                   	(bad)
 4a7:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 4ae:	43 5f                	rex.XB pop %r15
 4b0:	32 2e                	xor    (%rsi),%ch
 4b2:	32 2e                	xor    (%rsi),%ch
 4b4:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 4b9:	4d 5f                	rex.WRB pop %r15
 4bb:	64 65 72 65          	fs gs jb 524 <_init-0xadc>
 4bf:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4c6:	4d 
 4c7:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4c9:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ca:	6e                   	outsb  %ds:(%rsi),(%dx)
 4cb:	65 54                	gs push %rsp
 4cd:	61                   	(bad)
 4ce:	62                   	(bad)
 4cf:	6c                   	insb   (%dx),%es:(%rdi)
 4d0:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4d4:	67 6d                	insl   (%dx),%es:(%edi)
 4d6:	6f                   	outsl  %ds:(%rsi),(%dx)
 4d7:	6e                   	outsb  %ds:(%rsi),(%dx)
 4d8:	5f                   	pop    %rdi
 4d9:	73 74                	jae    54f <_init-0xab1>
 4db:	61                   	(bad)
 4dc:	72 74                	jb     552 <_init-0xaae>
 4de:	5f                   	pop    %rdi
 4df:	5f                   	pop    %rdi
 4e0:	00 5f 49             	add    %bl,0x49(%rdi)
 4e3:	54                   	push   %rsp
 4e4:	4d 5f                	rex.WRB pop %r15
 4e6:	72 65                	jb     54d <_init-0xab3>
 4e8:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4ef:	4d 
 4f0:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 4f3:	6e                   	outsb  %ds:(%rsi),(%dx)
 4f4:	65 54                	gs push %rsp
 4f6:	61                   	(bad)
 4f7:	62                   	.byte 0x62
 4f8:	6c                   	insb   (%dx),%es:(%rdi)
 4f9:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000004fc <.gnu.version>:
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	02 00                	add    (%rax),%al
 502:	02 00                	add    (%rax),%al
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000510 <.gnu.version_r>:
 510:	01 00                	add    %eax,(%rax)
 512:	01 00                	add    %eax,(%rax)
 514:	01 00                	add    %eax,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	10 00                	adc    %al,(%rax)
 51a:	00 00                	add    %al,(%rax)
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	75 1a                	jne    53c <_init-0xac4>
 522:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 528:	3a 00                	cmp    (%rax),%al
 52a:	00 00                	add    %al,(%rax)
 52c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000530 <.rela.dyn>:
 530:	b8 3d 00 00 00       	mov    $0x3d,%eax
 535:	00 00                	add    %al,(%rax)
 537:	00 08                	add    %cl,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 00                	add    %al,(%rax)
 53d:	00 00                	add    %al,(%rax)
 53f:	00 40 11             	add    %al,0x11(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	c0 3d 00 00 00 00 00 	sarb   $0x0,0x0(%rip)        # 54f <_init-0xab1>
 54f:	00 08                	add    %cl,(%rax)
	...
 559:	11 00                	adc    %eax,(%rax)
 55b:	00 00                	add    %al,(%rax)
 55d:	00 00                	add    %al,(%rax)
 55f:	00 08                	add    %cl,(%rax)
 561:	40 00 00             	rex add %al,(%rax)
 564:	00 00                	add    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	08 00                	or     %al,(%rax)
 56a:	00 00                	add    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	08 40 00             	or     %al,0x0(%rax)
 573:	00 00                	add    %al,(%rax)
 575:	00 00                	add    %al,(%rax)
 577:	00 d8                	add    %bl,%al
 579:	3f                   	(bad)
 57a:	00 00                	add    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	06                   	(bad)
 581:	00 00                	add    %al,(%rax)
 583:	00 01                	add    %al,(%rcx)
	...
 58d:	00 00                	add    %al,(%rax)
 58f:	00 e0                	add    %ah,%al
 591:	3f                   	(bad)
 592:	00 00                	add    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	06                   	(bad)
 599:	00 00                	add    %al,(%rax)
 59b:	00 03                	add    %al,(%rbx)
	...
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 e8                	add    %ch,%al
 5a9:	3f                   	(bad)
 5aa:	00 00                	add    %al,(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	06                   	(bad)
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5be:	00 00                	add    %al,(%rax)
 5c0:	f0 3f                	lock (bad)
 5c2:	00 00                	add    %al,(%rax)
 5c4:	00 00                	add    %al,(%rax)
 5c6:	00 00                	add    %al,(%rax)
 5c8:	06                   	(bad)
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5d1 <_init-0xa2f>
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 00                	add    %al,(%rax)
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 f8                	add    %bh,%al
 5d9:	3f                   	(bad)
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	06                   	(bad)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .rela.plt:

00000000000005f0 <.rela.plt>:
 5f0:	d0 3f                	sarb   (%rdi)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	07                   	(bad)
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	push   0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmp *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmp *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <__assert_fail@plt>:
    1050:	f3 0f 1e fa          	endbr64
    1054:	f2 ff 25 75 2f 00 00 	bnd jmp *0x2f75(%rip)        # 3fd0 <__assert_fail@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 76 02 00 00 	lea    0x276(%rip),%r8        # 12f0 <__libc_csu_fini>
    107a:	48 8d 0d ff 01 00 00 	lea    0x1ff(%rip),%rcx        # 1280 <__libc_csu_init>
    1081:	48 8d 3d 92 01 00 00 	lea    0x192(%rip),%rdi        # 121a <main>
    1088:	ff 15 52 2f 00 00    	call   *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	call   1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	ret
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001149 <_Z4add1ii>:
    1149:	f3 0f 1e fa          	endbr64
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1154:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1157:	8b 45 fc             	mov    -0x4(%rbp),%eax
    115a:	83 c0 01             	add    $0x1,%eax
    115d:	5d                   	pop    %rbp
    115e:	c3                   	ret

000000000000115f <_Z4add2ii>:
    115f:	f3 0f 1e fa          	endbr64
    1163:	55                   	push   %rbp
    1164:	48 89 e5             	mov    %rsp,%rbp
    1167:	48 83 ec 08          	sub    $0x8,%rsp
    116b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    116e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1171:	8b 55 f8             	mov    -0x8(%rbp),%edx
    1174:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1177:	89 d6                	mov    %edx,%esi
    1179:	89 c7                	mov    %eax,%edi
    117b:	e8 c9 ff ff ff       	call   1149 <_Z4add1ii>
    1180:	83 c0 01             	add    $0x1,%eax
    1183:	c9                   	leave
    1184:	c3                   	ret

0000000000001185 <_Z4add3ii>:
    1185:	f3 0f 1e fa          	endbr64
    1189:	55                   	push   %rbp
    118a:	48 89 e5             	mov    %rsp,%rbp
    118d:	48 83 ec 08          	sub    $0x8,%rsp
    1191:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1194:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1197:	8b 55 f8             	mov    -0x8(%rbp),%edx
    119a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    119d:	89 d6                	mov    %edx,%esi
    119f:	89 c7                	mov    %eax,%edi
    11a1:	e8 b9 ff ff ff       	call   115f <_Z4add2ii>
    11a6:	83 c0 01             	add    $0x1,%eax
    11a9:	c9                   	leave
    11aa:	c3                   	ret

00000000000011ab <_Z4add4ii>:
    11ab:	f3 0f 1e fa          	endbr64
    11af:	55                   	push   %rbp
    11b0:	48 89 e5             	mov    %rsp,%rbp
    11b3:	48 83 ec 08          	sub    $0x8,%rsp
    11b7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11ba:	89 75 f8             	mov    %esi,-0x8(%rbp)
    11bd:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11c0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11c3:	89 d6                	mov    %edx,%esi
    11c5:	89 c7                	mov    %eax,%edi
    11c7:	e8 b9 ff ff ff       	call   1185 <_Z4add3ii>
    11cc:	83 c0 01             	add    $0x1,%eax
    11cf:	c9                   	leave
    11d0:	c3                   	ret

00000000000011d1 <_Z4add5ii>:
    11d1:	f3 0f 1e fa          	endbr64
    11d5:	55                   	push   %rbp
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	48 83 ec 08          	sub    $0x8,%rsp
    11dd:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11e0:	89 75 f8             	mov    %esi,-0x8(%rbp)
    11e3:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e9:	89 d6                	mov    %edx,%esi
    11eb:	89 c7                	mov    %eax,%edi
    11ed:	e8 b9 ff ff ff       	call   11ab <_Z4add4ii>
    11f2:	83 c0 01             	add    $0x1,%eax
    11f5:	c9                   	leave
    11f6:	c3                   	ret

00000000000011f7 <_Z6addx_yii>:
    11f7:	f3 0f 1e fa          	endbr64
    11fb:	55                   	push   %rbp
    11fc:	48 89 e5             	mov    %rsp,%rbp
    11ff:	48 83 ec 08          	sub    $0x8,%rsp
    1203:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1206:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1209:	8b 55 f8             	mov    -0x8(%rbp),%edx
    120c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    120f:	89 d6                	mov    %edx,%esi
    1211:	89 c7                	mov    %eax,%edi
    1213:	e8 b9 ff ff ff       	call   11d1 <_Z4add5ii>
    1218:	c9                   	leave
    1219:	c3                   	ret

000000000000121a <main>:
    121a:	f3 0f 1e fa          	endbr64
    121e:	55                   	push   %rbp
    121f:	48 89 e5             	mov    %rsp,%rbp
    1222:	48 83 ec 10          	sub    $0x10,%rsp
    1226:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%rbp)
    122d:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%rbp)
    1234:	8b 55 f8             	mov    -0x8(%rbp),%edx
    1237:	8b 45 f4             	mov    -0xc(%rbp),%eax
    123a:	89 d6                	mov    %edx,%esi
    123c:	89 c7                	mov    %eax,%edi
    123e:	e8 b4 ff ff ff       	call   11f7 <_Z6addx_yii>
    1243:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1246:	8b 55 f4             	mov    -0xc(%rbp),%edx
    1249:	8b 45 f8             	mov    -0x8(%rbp),%eax
    124c:	01 d0                	add    %edx,%eax
    124e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1251:	74 1f                	je     1272 <main+0x58>
    1253:	48 8d 0d aa 0d 00 00 	lea    0xdaa(%rip),%rcx        # 2004 <_IO_stdin_used+0x4>
    125a:	ba 2c 00 00 00       	mov    $0x2c,%edx
    125f:	48 8d 35 a9 0d 00 00 	lea    0xda9(%rip),%rsi        # 200f <_IO_stdin_used+0xf>
    1266:	48 8d 3d ac 0d 00 00 	lea    0xdac(%rip),%rdi        # 2019 <_IO_stdin_used+0x19>
    126d:	e8 de fd ff ff       	call   1050 <__assert_fail@plt>
    1272:	b8 00 00 00 00       	mov    $0x0,%eax
    1277:	c9                   	leave
    1278:	c3                   	ret
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <__libc_csu_init>:
    1280:	f3 0f 1e fa          	endbr64
    1284:	41 57                	push   %r15
    1286:	4c 8d 3d 2b 2b 00 00 	lea    0x2b2b(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    128d:	41 56                	push   %r14
    128f:	49 89 d6             	mov    %rdx,%r14
    1292:	41 55                	push   %r13
    1294:	49 89 f5             	mov    %rsi,%r13
    1297:	41 54                	push   %r12
    1299:	41 89 fc             	mov    %edi,%r12d
    129c:	55                   	push   %rbp
    129d:	48 8d 2d 1c 2b 00 00 	lea    0x2b1c(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    12a4:	53                   	push   %rbx
    12a5:	4c 29 fd             	sub    %r15,%rbp
    12a8:	48 83 ec 08          	sub    $0x8,%rsp
    12ac:	e8 4f fd ff ff       	call   1000 <_init>
    12b1:	48 c1 fd 03          	sar    $0x3,%rbp
    12b5:	74 1f                	je     12d6 <__libc_csu_init+0x56>
    12b7:	31 db                	xor    %ebx,%ebx
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12c0:	4c 89 f2             	mov    %r14,%rdx
    12c3:	4c 89 ee             	mov    %r13,%rsi
    12c6:	44 89 e7             	mov    %r12d,%edi
    12c9:	41 ff 14 df          	call   *(%r15,%rbx,8)
    12cd:	48 83 c3 01          	add    $0x1,%rbx
    12d1:	48 39 dd             	cmp    %rbx,%rbp
    12d4:	75 ea                	jne    12c0 <__libc_csu_init+0x40>
    12d6:	48 83 c4 08          	add    $0x8,%rsp
    12da:	5b                   	pop    %rbx
    12db:	5d                   	pop    %rbp
    12dc:	41 5c                	pop    %r12
    12de:	41 5d                	pop    %r13
    12e0:	41 5e                	pop    %r14
    12e2:	41 5f                	pop    %r15
    12e4:	c3                   	ret
    12e5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    12ec:	00 00 00 00 

00000000000012f0 <__libc_csu_fini>:
    12f0:	f3 0f 1e fa          	endbr64
    12f4:	c3                   	ret

Disassembly of section .fini:

00000000000012f8 <_fini>:
    12f8:	f3 0f 1e fa          	endbr64
    12fc:	48 83 ec 08          	sub    $0x8,%rsp
    1300:	48 83 c4 08          	add    $0x8,%rsp
    1304:	c3                   	ret

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	69 6e 74 20 6d 61 69 	imul   $0x69616d20,0x74(%rsi),%ebp
    200b:	6e                   	outsb  %ds:(%rsi),(%dx)
    200c:	28 29                	sub    %ch,(%rcx)
    200e:	00 73 79             	add    %dh,0x79(%rbx)
    2011:	6d                   	insl   (%dx),%es:(%rdi)
    2012:	65 78 2e             	gs js  2043 <__GNU_EH_FRAME_HDR+0x1f>
    2015:	63 70 70             	movsxd 0x70(%rax),%esi
    2018:	00 61 2b             	add    %ah,0x2b(%rcx)
    201b:	62                   	(bad)
    201c:	3d 3d 73 75 6d       	cmp    $0x6d75733d,%eax
	...

Disassembly of section .eh_frame_hdr:

0000000000002024 <__GNU_EH_FRAME_HDR>:
    2024:	01 1b                	add    %ebx,(%rbx)
    2026:	03 3b                	add    (%rbx),%edi
    2028:	70 00                	jo     202a <__GNU_EH_FRAME_HDR+0x6>
    202a:	00 00                	add    %al,(%rax)
    202c:	0d 00 00 00 fc       	or     $0xfc000000,%eax
    2031:	ef                   	out    %eax,(%dx)
    2032:	ff                   	(bad)
    2033:	ff a4 00 00 00 1c f0 	jmp    *-0xfe40000(%rax,%rax,1)
    203a:	ff                   	(bad)
    203b:	ff cc                	dec    %esp
    203d:	00 00                	add    %al,(%rax)
    203f:	00 2c f0             	add    %ch,(%rax,%rsi,8)
    2042:	ff                   	(bad)
    2043:	ff e4                	jmp    *%rsp
    2045:	00 00                	add    %al,(%rax)
    2047:	00 3c f0             	add    %bh,(%rax,%rsi,8)
    204a:	ff                   	(bad)
    204b:	ff 8c 00 00 00 25 f1 	decl   -0xedb0000(%rax,%rax,1)
    2052:	ff                   	(bad)
    2053:	ff                   	(bad)
    2054:	fc                   	cld
    2055:	00 00                	add    %al,(%rax)
    2057:	00 3b                	add    %bh,(%rbx)
    2059:	f1                   	int1
    205a:	ff                   	(bad)
    205b:	ff 1c 01             	lcall  *(%rcx,%rax,1)
    205e:	00 00                	add    %al,(%rax)
    2060:	61                   	(bad)
    2061:	f1                   	int1
    2062:	ff                   	(bad)
    2063:	ff                   	(bad)
    2064:	3c 01                	cmp    $0x1,%al
    2066:	00 00                	add    %al,(%rax)
    2068:	87 f1                	xchg   %esi,%ecx
    206a:	ff                   	(bad)
    206b:	ff 5c 01 00          	lcall  *0x0(%rcx,%rax,1)
    206f:	00 ad f1 ff ff 7c    	add    %ch,0x7cfffff1(%rbp)
    2075:	01 00                	add    %eax,(%rax)
    2077:	00 d3                	add    %dl,%bl
    2079:	f1                   	int1
    207a:	ff                   	(bad)
    207b:	ff 9c 01 00 00 f6 f1 	lcall  *-0xe0a0000(%rcx,%rax,1)
    2082:	ff                   	(bad)
    2083:	ff                   	(bad)
    2084:	bc 01 00 00 5c       	mov    $0x5c000001,%esp
    2089:	f2 ff                	repnz (bad)
    208b:	ff                   	(bad)
    208c:	dc 01                	faddl  (%rcx)
    208e:	00 00                	add    %al,(%rax)
    2090:	cc                   	int3
    2091:	f2 ff                	repnz (bad)
    2093:	ff 24 02             	jmp    *(%rdx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000002098 <__FRAME_END__-0x1c4>:
    2098:	14 00                	adc    $0x0,%al
    209a:	00 00                	add    %al,(%rax)
    209c:	00 00                	add    %al,(%rax)
    209e:	00 00                	add    %al,(%rax)
    20a0:	01 7a 52             	add    %edi,0x52(%rdx)
    20a3:	00 01                	add    %al,(%rcx)
    20a5:	78 10                	js     20b7 <__GNU_EH_FRAME_HDR+0x93>
    20a7:	01 1b                	add    %ebx,(%rbx)
    20a9:	0c 07                	or     $0x7,%al
    20ab:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20b1:	00 00                	add    %al,(%rax)
    20b3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20b6:	00 00                	add    %al,(%rax)
    20b8:	a8 ef                	test   $0xef,%al
    20ba:	ff                   	(bad)
    20bb:	ff 2f                	ljmp   *(%rdi)
    20bd:	00 00                	add    %al,(%rax)
    20bf:	00 00                	add    %al,(%rax)
    20c1:	44 07                	rex.R (bad)
    20c3:	10 00                	adc    %al,(%rax)
    20c5:	00 00                	add    %al,(%rax)
    20c7:	00 24 00             	add    %ah,(%rax,%rax,1)
    20ca:	00 00                	add    %al,(%rax)
    20cc:	34 00                	xor    $0x0,%al
    20ce:	00 00                	add    %al,(%rax)
    20d0:	50                   	push   %rax
    20d1:	ef                   	out    %eax,(%dx)
    20d2:	ff                   	(bad)
    20d3:	ff 20                	jmp    *(%rax)
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 00                	add    %al,(%rax)
    20d9:	0e                   	(bad)
    20da:	10 46 0e             	adc    %al,0xe(%rsi)
    20dd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20e0:	0b 77 08             	or     0x8(%rdi),%esi
    20e3:	80 00 3f             	addb   $0x3f,(%rax)
    20e6:	1a 3a                	sbb    (%rdx),%bh
    20e8:	2a 33                	sub    (%rbx),%dh
    20ea:	24 22                	and    $0x22,%al
    20ec:	00 00                	add    %al,(%rax)
    20ee:	00 00                	add    %al,(%rax)
    20f0:	14 00                	adc    $0x0,%al
    20f2:	00 00                	add    %al,(%rax)
    20f4:	5c                   	pop    %rsp
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 48 ef             	add    %cl,-0x11(%rax)
    20fa:	ff                   	(bad)
    20fb:	ff 10                	call   *(%rax)
	...
    2105:	00 00                	add    %al,(%rax)
    2107:	00 14 00             	add    %dl,(%rax,%rax,1)
    210a:	00 00                	add    %al,(%rax)
    210c:	74 00                	je     210e <__GNU_EH_FRAME_HDR+0xea>
    210e:	00 00                	add    %al,(%rax)
    2110:	40 ef                	rex out %eax,(%dx)
    2112:	ff                   	(bad)
    2113:	ff 10                	call   *(%rax)
	...
    211d:	00 00                	add    %al,(%rax)
    211f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2122:	00 00                	add    %al,(%rax)
    2124:	8c 00                	mov    %es,(%rax)
    2126:	00 00                	add    %al,(%rax)
    2128:	21 f0                	and    %esi,%eax
    212a:	ff                   	(bad)
    212b:	ff 16                	call   *(%rsi)
    212d:	00 00                	add    %al,(%rax)
    212f:	00 00                	add    %al,(%rax)
    2131:	45 0e                	rex.RB (bad)
    2133:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2139:	4d 0c 07             	rex.WRB or $0x7,%al
    213c:	08 00                	or     %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	1c 00                	sbb    $0x0,%al
    2142:	00 00                	add    %al,(%rax)
    2144:	ac                   	lods   %ds:(%rsi),%al
    2145:	00 00                	add    %al,(%rax)
    2147:	00 17                	add    %dl,(%rdi)
    2149:	f0 ff                	lock (bad)
    214b:	ff 26                	jmp    *(%rsi)
    214d:	00 00                	add    %al,(%rax)
    214f:	00 00                	add    %al,(%rax)
    2151:	45 0e                	rex.RB (bad)
    2153:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2159:	5d                   	pop    %rbp
    215a:	0c 07                	or     $0x7,%al
    215c:	08 00                	or     %al,(%rax)
    215e:	00 00                	add    %al,(%rax)
    2160:	1c 00                	sbb    $0x0,%al
    2162:	00 00                	add    %al,(%rax)
    2164:	cc                   	int3
    2165:	00 00                	add    %al,(%rax)
    2167:	00 1d f0 ff ff 26    	add    %bl,0x26fffff0(%rip)        # 2700215d <_end+0x26ffe145>
    216d:	00 00                	add    %al,(%rax)
    216f:	00 00                	add    %al,(%rax)
    2171:	45 0e                	rex.RB (bad)
    2173:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2179:	5d                   	pop    %rbp
    217a:	0c 07                	or     $0x7,%al
    217c:	08 00                	or     %al,(%rax)
    217e:	00 00                	add    %al,(%rax)
    2180:	1c 00                	sbb    $0x0,%al
    2182:	00 00                	add    %al,(%rax)
    2184:	ec                   	in     (%dx),%al
    2185:	00 00                	add    %al,(%rax)
    2187:	00 23                	add    %ah,(%rbx)
    2189:	f0 ff                	lock (bad)
    218b:	ff 26                	jmp    *(%rsi)
    218d:	00 00                	add    %al,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	45 0e                	rex.RB (bad)
    2193:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2199:	5d                   	pop    %rbp
    219a:	0c 07                	or     $0x7,%al
    219c:	08 00                	or     %al,(%rax)
    219e:	00 00                	add    %al,(%rax)
    21a0:	1c 00                	sbb    $0x0,%al
    21a2:	00 00                	add    %al,(%rax)
    21a4:	0c 01                	or     $0x1,%al
    21a6:	00 00                	add    %al,(%rax)
    21a8:	29 f0                	sub    %esi,%eax
    21aa:	ff                   	(bad)
    21ab:	ff 26                	jmp    *(%rsi)
    21ad:	00 00                	add    %al,(%rax)
    21af:	00 00                	add    %al,(%rax)
    21b1:	45 0e                	rex.RB (bad)
    21b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21b9:	5d                   	pop    %rbp
    21ba:	0c 07                	or     $0x7,%al
    21bc:	08 00                	or     %al,(%rax)
    21be:	00 00                	add    %al,(%rax)
    21c0:	1c 00                	sbb    $0x0,%al
    21c2:	00 00                	add    %al,(%rax)
    21c4:	2c 01                	sub    $0x1,%al
    21c6:	00 00                	add    %al,(%rax)
    21c8:	2f                   	(bad)
    21c9:	f0 ff                	lock (bad)
    21cb:	ff 23                	jmp    *(%rbx)
    21cd:	00 00                	add    %al,(%rax)
    21cf:	00 00                	add    %al,(%rax)
    21d1:	45 0e                	rex.RB (bad)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	5a                   	pop    %rdx
    21da:	0c 07                	or     $0x7,%al
    21dc:	08 00                	or     %al,(%rax)
    21de:	00 00                	add    %al,(%rax)
    21e0:	1c 00                	sbb    $0x0,%al
    21e2:	00 00                	add    %al,(%rax)
    21e4:	4c 01 00             	add    %r8,(%rax)
    21e7:	00 32                	add    %dh,(%rdx)
    21e9:	f0 ff                	lock (bad)
    21eb:	ff 5f 00             	lcall  *0x0(%rdi)
    21ee:	00 00                	add    %al,(%rax)
    21f0:	00 45 0e             	add    %al,0xe(%rbp)
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	02 56 0c             	add    0xc(%rsi),%dl
    21fc:	07                   	(bad)
    21fd:	08 00                	or     %al,(%rax)
    21ff:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    2203:	00 6c 01 00          	add    %ch,0x0(%rcx,%rax,1)
    2207:	00 78 f0             	add    %bh,-0x10(%rax)
    220a:	ff                   	(bad)
    220b:	ff 65 00             	jmp    *0x0(%rbp)
    220e:	00 00                	add    %al,(%rax)
    2210:	00 46 0e             	add    %al,0xe(%rsi)
    2213:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2219:	8e 03                	mov    (%rbx),%es
    221b:	45 0e                	rex.RB (bad)
    221d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2223:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630306d <_end+0xffffffff862ff055>
    2229:	06                   	(bad)
    222a:	48 0e                	rex.W (bad)
    222c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2232:	6e                   	outsb  %ds:(%rsi),(%dx)
    2233:	0e                   	(bad)
    2234:	38 41 0e             	cmp    %al,0xe(%rcx)
    2237:	30 41 0e             	xor    %al,0xe(%rcx)
    223a:	28 42 0e             	sub    %al,0xe(%rdx)
    223d:	20 42 0e             	and    %al,0xe(%rdx)
    2240:	18 42 0e             	sbb    %al,0xe(%rdx)
    2243:	10 42 0e             	adc    %al,0xe(%rdx)
    2246:	08 00                	or     %al,(%rax)
    2248:	10 00                	adc    %al,(%rax)
    224a:	00 00                	add    %al,(%rax)
    224c:	b4 01                	mov    $0x1,%ah
    224e:	00 00                	add    %al,(%rax)
    2250:	a0 f0 ff ff 05 00 00 	movabs 0x5fffff0,%al
    2257:	00 00 
    2259:	00 00                	add    %al,(%rax)
	...

000000000000225c <__FRAME_END__>:
    225c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003db8 <__frame_dummy_init_array_entry>:
    3db8:	40 11 00             	rex adc %eax,(%rax)
    3dbb:	00 00                	add    %al,(%rax)
    3dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003dc0 <__do_global_dtors_aux_fini_array_entry>:
    3dc0:	00 11                	add    %dl,(%rcx)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003dc8 <_DYNAMIC>:
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	01 00                	add    %eax,(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	0c 00                	or     $0x0,%al
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	00 10                	add    %dl,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	0d 00 00 00 00       	or     $0x0,%eax
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 f8                	add    %bh,%al
    3df1:	12 00                	adc    (%rax),%al
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 19                	add    %bl,(%rcx)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 1b                	add    %bl,(%rbx)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 08                	add    %cl,(%rax)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 1a                	add    %bl,(%rdx)
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 c0                	add    %al,%al
    3e21:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	1c 00                	sbb    $0x0,%al
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	08 00                	or     %al,(%rax)
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	f5                   	cmc
    3e39:	fe                   	(bad)
    3e3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e4d <_DYNAMIC+0x85>
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 70 04             	add    %dh,0x4(%rax)
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	06                   	(bad)
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 c8                	add    %cl,%al
    3e61:	03 00                	add    (%rax),%eax
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 0a                	add    %cl,(%rdx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 8b 00 00 00 00    	add    %cl,0x0(%rbx)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 0b                	add    %cl,(%rbx)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 18                	add    %bl,(%rax)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e8d <_DYNAMIC+0xc5>
	...
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 03                	add    %al,(%rbx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 02                	add    %al,(%rdx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	07                   	(bad)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 17                	add    %dl,(%rdi)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 f0                	add    %dh,%al
    3ed1:	05 00 00 00 00       	add    $0x0,%eax
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	07                   	(bad)
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 30                	add    %dh,(%rax)
    3ee1:	05 00 00 00 00       	add    $0x0,%eax
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	08 00                	or     %al,(%rax)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	c0 00 00             	rolb   $0x0,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 09                	add    %cl,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 18                	add    %bl,(%rax)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 1e                	add    %bl,(%rsi)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 08                	add    %cl,(%rax)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 fb                	add    %bh,%bl
    3f19:	ff                   	(bad)
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 01                	add    %al,(%rcx)
    3f21:	00 00                	add    %al,(%rax)
    3f23:	08 00                	or     %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 fe                	add    %bh,%dh
    3f29:	ff                   	(bad)
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 10                	add    %dl,(%rax)
    3f31:	05 00 00 00 00       	add    $0x0,%eax
    3f36:	00 00                	add    %al,(%rax)
    3f38:	ff                   	(bad)
    3f39:	ff                   	(bad)
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 01                	add    %al,(%rcx)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	00 00                	add    %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 f0                	add    %dh,%al
    3f49:	ff                   	(bad)
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 fc                	add    %bh,%ah
    3f51:	04 00                	add    $0x0,%al
    3f53:	00 00                	add    %al,(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 f9                	add    %bh,%cl
    3f59:	ff                   	(bad)
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb8 <_GLOBAL_OFFSET_TABLE_>:
    3fb8:	c8 3d 00 00          	enter  $0x3d,$0x0
	...
    3fd0:	30 10                	xor    %dl,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75623530>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
